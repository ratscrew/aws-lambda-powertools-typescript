name: on-merge-to-main
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  publish:
    #########################
    # Force Github action to run only a single job at a time (based on the group name)
    # This is to prevent "race-condition" in publishing a new version of doc to `gh-pages` (#365)
    #########################
    concurrency:
      group: on-merge-to-main
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    #########################    
    # Release new version
    #########################
    - name: "Use NodeJS 16"
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install npm@8.x
      run: npm i -g npm@next-8
    - name: "Setup npm"
      run: |
        npm set "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}"
    - name: Install monorepo packages
      # This installs all the dependencies of ./packages/*
      # See https://github.com/npm/cli/issues/4475 to see why --foreground-scripts
      run: npm ci --foreground-scripts
    - name: Install CDK example packages
      # Since we are not managing the CDK examples with npm workspaces we install
      # the dependencies in a separate step
      working-directory: ./examples/cdk
      run: npm ci
    - name: "Setup SAM"
      # We use an ad-hoc action so we can specify the SAM CLI version
      uses: aws-actions/setup-sam@v2
      with:
        version: 1.49.0
    - name: Install SAM example packages
      # Since we are not managing the SAM examples with npm workspaces we install
      # the dependencies in a separate step
      working-directory: ./examples/sam
      run: npm ci
    - name: Run lint
      run: npm run lerna-lint
    - name: Run tests
      run: npm run lerna-test
    - name: Update release draft
      uses: release-drafter/release-drafter@v5.20.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #########################    
    # Generate documentation
    #########################
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install doc generation dependencies
      run: |
        pip install --upgrade pip 
        pip install -r docs/requirements.txt
    - name: Setup doc deploy
      run: |
        git config --global user.name Docs deploy
        git config --global user.email docs@dummy.bot.com
    - name: Build mkdocs site in "gh-pages" branch and push
      run: |
        rm -rf site
        VERSION="dev"
        echo "Publishing doc for version: $VERSION"
        mkdocs build
        mike deploy --push "$VERSION"
    - name: Build API docs
      run: |
        rm -rf api
        npm run docs-generateApiDoc
    - name: Release API docs to the released version
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./api
        keep_files: true
        destination_dir: dev/api
    - name: Release API docs to the "latest" version
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./api
        keep_files: true
        destination_dir: latest/api 
